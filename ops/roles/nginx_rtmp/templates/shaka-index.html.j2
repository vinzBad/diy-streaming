<html>
    <head>
        <title>shaka streaming client</title>
        <meta charset="utf-8"/>
        <!--<link href="/video-js.min.css" rel="stylesheet" />-->
    </head>
    <body>
        <center>
        <h1>shaka (dash) streaming client</h1>


        <video id="video"
        width="640"       
        controls autoplay>

    </video>


        <script src="/shaka-player.compiled.js"></script>
        <!--<script src="/videojs-http-streaming.min.js"></script>-->
        <!--<script src="/videojs-dash.min.js"></script>-->
        <!--<script src="dash.all.min.js"></script>-->
        <script>
            prefix = "/{{ nginx_rtmp.stream_secret }}/view/shaka/"
            path = window.location.pathname // /secret/view/shaka/<streamkey>
            stream_key = path.split(prefix)[1]
            mdp_url = "https://{{ nginx_rtmp.server_name }}/{{ nginx_rtmp.stream_secret }}/dsh/" + stream_key + ".mpd"
            console.log(path)
            console.log(prefix)
            console.log(stream_key)
            console.log(mdp_url)

            var manifestUri = mdp_url;

function initApp() {
  // Install built-in polyfills to patch browser incompatibilities.
  shaka.polyfill.installAll();

  // Check to see if the browser supports the basic APIs Shaka needs.
  if (shaka.Player.isBrowserSupported()) {
    // Everything looks good!
    initPlayer();
  } else {
    // This browser does not have the minimum set of APIs we need.
    console.error('Browser not supported!');
  }
}

function initPlayer() {
  // Create a Player instance.
  var video = document.getElementById('video');
  var player = new shaka.Player(video);



  // Attach player to the window to make it easy to access in the JS console.
  window.player = player;
  player.configure({streaming: {bufferingGoal: 5}})

  // Listen for error events.
  player.addEventListener('error', onErrorEvent);

  // Try to load a manifest.
  // This is an asynchronous process.
  player.load(manifestUri).then(function() {
    // This runs if the asynchronous load is successful.
    console.log('The video has now been loaded!');
  }).catch(onError);  // onError is executed if the asynchronous load fails.
}

function onErrorEvent(event) {
  // Extract the shaka.util.Error object from the event.
  onError(event.detail);
}

function onError(error) {
  // Log the error.
  console.error('Error code', error.code, 'object', error);
}

document.addEventListener('DOMContentLoaded', initApp);
        </script> 
    </body>
</html>
